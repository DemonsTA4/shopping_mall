# .gitignore

# Purpose: Specifies intentionally untracked files that Git should ignore.
# Files already tracked by Git are not affected by this file;
# you may need to 'git rm --cached <file>' to untrack them.

# General ignores
###################
*.log
*.log.*
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.tmp
*~
*.swp
temp/
cache/

# Operating System generated files
##################################
# macOS
.DS_Store
.AppleDouble
.LSOverride
# Thumbnails
._*
# Files that might appear on external disk
.Spotlight-V100
.Trashes
# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# IDE and Editor specific files (root level)
###########################################
# IntelliJ IDEA
.idea/
*.iml
*.ipr
*.iws
shelf/ # IntelliJ Shelf
# Eclipse
.classpath
.project
.settings/
build/ # Eclipse build output (if not part of Gradle/Maven build process)
# VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
# NetBeans
/nbproject/private/
/nbbuild/
/dist/ # NetBeans dist folder (if not frontend/dist or backend/dist)
/nbdist/
/.nb-gradle/
# Sublime Text
*.sublime-project
*.sublime-workspace
# Atom
.atom/
# Other
*.bak
*.old
*.orig

# Frontend project (inside frontend/ directory)
################################################
# Dependency directories
frontend/node_modules/

# Vite/Vue build output directory
frontend/dist/

# Vite cache and pre-bundling directory
frontend/.vite/

# Nuxt.js build output (if you ever use Nuxt with Vite)
# frontend/.nuxt/
# frontend/.output/

# Test coverage reports
frontend/coverage/
frontend/lcov-report/
frontend/jest.config.js.map # If using Jest

# Runtime data, e.g., PID files
frontend/pids/
frontend/*.pid
frontend/*.seed
frontend/*.pid.lock

# Local environment variables files
# (Commit .env.example or similar template files, but not actual .env files with secrets)
frontend/.env
frontend/.env.local
frontend/.env.*.local
frontend/.env.development
frontend/.env.development.local
frontend/.env.production
frontend/.env.production.local

# Vue-CLI generated service worker (if applicable, less common with Vite raw)
# frontend/public/service-worker.js

# Quasar (if you ever use Quasar with Vite)
# frontend/.quasar/


# Backend project (inside backend/ directory - Java Spring Boot with Maven)
#######################################################################
# Maven build output directory
backend/target/

# Maven temporary files or backup files
backend/pom.xml.tag
backend/pom.xml.releaseBackup
backend/pom.xml.versionsBackup
backend/pom.xml.next
backend/release.properties
backend/dependency-reduced-pom.xml
backend/buildNumber.properties

# Compiled Java class files (usually inside target/, but good to have an explicit rule)
backend/**/*.class

# Generated archive files (usually inside target/)
backend/*.jar
backend/*.war
backend/*.ear

# Java HotSpot VM error logs
backend/hs_err_pid*

# Spring Boot generated HELP.md (optional, can be ignored if you don't need it in repo)
# backend/HELP.md

# Log files specific to backend (if any, e.g., in a 'logs' subfolder of backend)
backend/logs/

# Gradle specific (if you ever switch or have Gradle modules, keep for reference)
# backend/.gradle/
# backend/build/

# Specific application-local config files you don't want to commit
# For example:
# backend/src/main/resources/application-local.properties
# backend/src/main/resources/application-dev.properties (if it contains secrets)