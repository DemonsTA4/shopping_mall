<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="org.example.shoppingmall.mapper.CartMapper">    <!-- 结果映射 -->    <resultMap id="BaseResultMap" type="org.example.shoppingmall.entity.Cart">        <id column="id" property="id" />        <result column="created_at" property="createdAt" />        <result column="updated_at" property="updatedAt" />        <association property="user" javaType="org.example.shoppingmall.entity.User">            <id column="user_id" property="id" />            <result column="user_username" property="username" />        </association>        <collection property="items" ofType="org.example.shoppingmall.entity.CartItem">            <id column="cart_item_id" property="id" />            <result column="quantity" property="quantity" />            <association property="product" javaType="org.example.shoppingmall.entity.Product">                <id column="product_id" property="id" />                <result column="product_name" property="name" />                <result column="product_price" property="price" />                <result column="product_image_url" property="imageUrl" />            </association>        </collection>    </resultMap>        <!-- 基础列 -->    <sql id="Base_Column_List">        c.id, c.created_at, c.updated_at, c.user_id, u.username as user_username    </sql>        <!-- 带购物车项的列 -->    <sql id="Cart_With_Items_Column_List">        c.id, c.created_at, c.updated_at, c.user_id, u.username as user_username,        ci.id as cart_item_id, ci.quantity,        p.id as product_id, p.name as product_name, p.price as product_price,         p.image_url as product_image_url    </sql>        <!-- 插入操作 -->    <insert id="insert" parameterType="org.example.shoppingmall.entity.Cart" useGeneratedKeys="true" keyProperty="id">        INSERT INTO carts (user_id, created_at, updated_at)        VALUES (#{user.id}, NOW(), NOW())    </insert>        <!-- 创建购物车（如果不存在） -->    <insert id="insertIfNotExists">        INSERT INTO carts (user_id, created_at, updated_at)        SELECT #{userId}, NOW(), NOW()        FROM dual        WHERE NOT EXISTS (SELECT 1 FROM carts WHERE user_id = #{userId})    </insert>        <!-- 更新操作 -->    <update id="update" parameterType="org.example.shoppingmall.entity.Cart">        UPDATE carts SET updated_at = NOW()        WHERE id = #{id}    </update>        <!-- 删除操作 -->    <delete id="deleteById" parameterType="java.lang.Integer">        DELETE FROM carts WHERE id = #{id}    </delete>        <!-- 根据ID查询 -->    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">        SELECT <include refid="Cart_With_Items_Column_List" />        FROM carts c        LEFT JOIN users u ON c.user_id = u.id        LEFT JOIN cart_items ci ON c.id = ci.cart_id        LEFT JOIN products p ON ci.product_id = p.id        WHERE c.id = #{id}    </select>        <!-- 根据用户ID查询购物车 -->    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">        SELECT <include refid="Cart_With_Items_Column_List" />        FROM carts c        LEFT JOIN users u ON c.user_id = u.id        LEFT JOIN cart_items ci ON c.id = ci.cart_id        LEFT JOIN products p ON ci.product_id = p.id        WHERE c.user_id = #{userId}    </select>        <!-- 清空购物车项 -->    <delete id="clearCartItems" parameterType="java.lang.Integer">        DELETE FROM cart_items WHERE cart_id = #{cartId}    </delete>        <!-- 检查购物车是否存在 -->    <select id="countByUserId" parameterType="java.lang.Integer" resultType="int">        SELECT COUNT(*) FROM carts WHERE user_id = #{userId}    </select></mapper>